version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: zayto_postgres
    environment:
      POSTGRES_USER: zayto
      POSTGRES_PASSWORD: zayto_password
      POSTGRES_DB: zayto_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zayto -d zayto_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Restaurants Service
  restaurants-service:
    build:
      context: ./backend/services/restaurants
      dockerfile: Dockerfile
    container_name: zayto_restaurants_service
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgres://zayto:zayto_password@postgres:5432/zayto_db
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: zayto_api_gateway
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
    depends_on:
      - restaurants-service
      - users-service
      - reviews-service
      - partner-service
      - orders-service
      - notifications-service

  # Discovery Microfrontend (migrated into frontend host for now)
  # NOTE: If separate, update paths accordingly.

  # Host App
  host-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: zayto_host_app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - api-gateway

  # Reviews Service
  reviews-service:
    build:
      context: ./backend/services/reviews
      dockerfile: Dockerfile
    container_name: zayto_reviews_service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://zayto:zayto_password@postgres:5432/zayto_db
    depends_on:
      postgres:
        condition: service_healthy

  # Users Service
  users-service:
    build:
      context: ./backend/services/users
      dockerfile: Dockerfile
    container_name: zayto_users_service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development

  # Partner Service
  partner-service:
    build:
      context: ./backend/services/partner
      dockerfile: Dockerfile
    container_name: zayto_partner_service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://zayto:zayto_password@postgres:5432/zayto_db
      JWT_SECRET: dev_secret
    depends_on:
      postgres:
        condition: service_healthy

  # Orders Service
  orders-service:
    build:
      context: ./backend/services/orders
      dockerfile: Dockerfile
    container_name: zayto_orders_service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://zayto:zayto_password@postgres:5432/zayto_db
      JWT_SECRET: dev_secret
    depends_on:
      postgres:
        condition: service_healthy

  # Notifications Service
  notifications-service:
    build:
      context: ./backend/services/notifications
      dockerfile: Dockerfile
    container_name: zayto_notifications_service
    ports:
      - "3007:3007"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://zayto:zayto_password@postgres:5432/zayto_db
      JWT_SECRET: dev_secret
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
