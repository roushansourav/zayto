name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Build and Validate (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [ "backend/api-gateway", "backend/services/restaurants", "backend/services/users", "frontend" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build if script exists
        working-directory: ${{ matrix.project }}
        run: |
          node -e "const p=require('./package.json'); process.exit(p.scripts&&p.scripts.build?0:1)" \
          && npm run build \
          || echo "No build script; skipping build for ${{ matrix.project }}"

      - name: Lint if script exists
        working-directory: ${{ matrix.project }}
        run: |
          node -e "const p=require('./package.json'); process.exit(p.scripts&&p.scripts.lint?0:1)" \
          && npm run lint \
          || echo "No lint script; skipping lint for ${{ matrix.project }}"

      - name: Test if script exists
        working-directory: ${{ matrix.project }}
        run: |
          node -e "const p=require('./package.json'); process.exit(p.scripts&&p.scripts.test?0:1)" \
          && npm test \
          || echo "No test script; skipping tests for ${{ matrix.project }}"

